name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3

    - name: install binaries
      run: |
        cargo install -f --verbose cargo-deb cargo-rpm

    - name: get version number
      id: get_version
      run: |
        # get Cargo.toml path
        METADATA_PATH=$(cargo locate-project --message-format plain)
        # get crate version 
        VERSION=$(cargo metadata --no-deps --format-version=1 | jq -r ".packages | map(select(.manifest_path==\"$METADATA_PATH\")) | map(.version) | @tsv")
        echo "::set-output name=crate_version::$VERSION"
  
    - name: build packages
      id: packaging
      run: |
        cargo deb
        cargo rpm build
        DEB_PACKAGE=$(find . -name "*.deb")
        DEB_FILENAME=$(basename -- ${DEB_PACKAGE})
        RPM_PACKAGE=$(find . -name "*.x86_64.rpm")
        RPM_FILENAME=$(basename -- ${RPM_PACKAGE})

        echo "::set-output name=DEB_PACKAGE::${DEB_PACKAGE}"
        echo "::set-output name=DEB_FILENAME::${DEB_FILENAME}"
        echo "::set-output name=RPM_PACKAGE::${RPM_PACKAGE}"
        echo "::set-output name=RPM_FILENAME::${RPM_FILENAME}"

    - name: Archive deb package
      uses: actions/upload-artifact@v3
      with:
        name: ${{steps.packaging.outputs.DEB_FILENAME}}
        path: ${{steps.packaging.outputs.DEB_PACKAGE}}
        retention-days: 3
    
    - name: Archive rpm package
      uses: actions/upload-artifact@v3
      with:
        name: ${{steps.packaging.outputs.RPM_FILENAME}}
        path: ${{steps.packaging.outputs.RPM_PACKAGE}}
        retention-days: 3

    - name: push crates.io
      run: |
        cargo publish --token ${{ secrets.CRATES_IO_API_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (deb)
      id: upload-release-asset-deb 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ${{steps.packaging.outputs.DEB_PACKAGE}}
        asset_name: ${{steps.packaging.outputs.DEB_FILENAME}}
        
    - name: Upload Release Asset (rpm)
      id: upload-release-asset-rpm
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ${{steps.packaging.outputs.RPM_PACKAGE}}
        asset_name: ${{steps.packaging.outputs.RPM_FILENAME}}

