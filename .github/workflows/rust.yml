name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/cache@v3.0.2
      id: sccache
      with:
        path: |
          ~/.cache/sccache
        key: ${{ runner.os }}-sccache_${{ hashFiles('./Cargo.lock') }}

    - uses: actions/cache@v3.0.2
      id: cache-bin
      with:
        path: |
          ~/.cargo/bin
        key: ${{ runner.os }}-cargo-bin_${{ hashFiles('./Cargo.lock') }}

    - name: install sccache
      if: steps.cache-bin.outputs.cache-hit != 'true'
      run: |
        cargo install -f sccache

    - name: install cargo-vendor
      if: steps.cache-bin.outputs.cache-hit != 'true'
      run: |
        RUSTC_WRAPPER=sccache cargo install cargo-vendor

    - name: install cargo-make
      if: steps.cache-bin.outputs.cache-hit != 'true'
      run: |
        RUSTC_WRAPPER=sccache cargo install cargo-make

    - name: install cargo-deb
      if: steps.cache-bin.outputs.cache-hit != 'true'
      run: |
        RUSTC_WRAPPER=sccache cargo install cargo-deb

    - name: install cargo-rpm
      if: steps.cache-bin.outputs.cache-hit != 'true'
      run: |
        RUSTC_WRAPPER=sccache cargo install cargo-rpm

    - name: install cargo-deny
      if: steps.cache-bin.outputs.cache-hit != 'true'
      run: |
        RUSTC_WRAPPER=sccache cargo install cargo-deny

    - uses: actions/cache@v3.0.2
      id: cache-vendor
      with:
        path: |
          ./vendor
        key: ${{ runner.os }}-vendor-${{ hashFiles('./Cargo.lock') }}

    - name: Vendor dependencies
      if: steps.cache-vendor.outputs.cache-hit != 'true'
      run: |
        cargo vendor > .cargo/config

    - name: Vendor dependencies(cached)
      if: steps.cache-vendor.outputs.cache-hit == 'true'
      run: |
        cp .cargo/config_vendored .cargo/config

    - name: Lint dependencies
      run: |
        cargo deny check

    - name: Build
      run: |
        RUSTC_WRAPPER=sccache cargo build --verbose
    
    - name: Run tests
      run: |
        RUSTC_WRAPPER=sccache cargo test --verbose
    
    - name: show cache status
      run: |
        sccache --show-stats
